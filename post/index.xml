<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on XP&#39;s Blog</title>
    <link>https://blog.xpgreat.com/post/</link>
    <description>Recent content in Posts on XP&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 29 Aug 2021 10:56:18 +0200</lastBuildDate><atom:link href="https://blog.xpgreat.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LRP简介</title>
      <link>https://blog.xpgreat.com/p/lrp/</link>
      <pubDate>Sun, 29 Aug 2021 10:56:18 +0200</pubDate>
      
      <guid>https://blog.xpgreat.com/p/lrp/</guid>
      <description>&lt;p&gt;机器学习的可解释性一直以来都是一个大问题，模型中的海量权重和连接关系让机器学习一直被视为黑盒模型。为了解决这个问题，Explainable AI （XAI）是一个前沿的研究方向。关于可解释性的研究，推荐这篇&lt;a class=&#34;link&#34; href=&#34;https://ieeexplore.ieee.org/document/9369420&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;综述&lt;/a&gt;。本文简要介绍解释深度神经网络（DNN）的算法LRP（Layerwise Relevance Propagation）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GNN 图神经网络简介</title>
      <link>https://blog.xpgreat.com/p/gnn/</link>
      <pubDate>Fri, 27 Aug 2021 23:40:00 +0200</pubDate>
      
      <guid>https://blog.xpgreat.com/p/gnn/</guid>
      <description>&lt;p&gt;图神经网络是是一种基于图结构的广义神经网络。其实传统的神经网络也是可以处理图数据，只需要进行前期合理的embedding即可，那么为什么还需要GNN呢？GNN其实属于一种embedding算法，它通过在整张图上&lt;strong&gt;传递、转换、聚合&lt;/strong&gt;节点的特征信息，从而生成单节点的embedding。本文简要介绍GNN，力求通俗易懂，需要更详细的研究GNN的话，推荐一篇2019年的综述&lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/abs/1901.00596&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;A Comprehensive Survey on Graph Neural Networks&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hamiltonian Monte Carlo算法</title>
      <link>https://blog.xpgreat.com/p/hmc/</link>
      <pubDate>Tue, 17 Aug 2021 20:34:54 +0200</pubDate>
      
      <guid>https://blog.xpgreat.com/p/hmc/</guid>
      <description>&lt;p&gt;MCMC（Markov-Chain Monte-Carlo）算法用于生成给定分布的样本。在很多时候，我们想计算一个复杂分布的函数期望值，但用解析的，求解积分的方法，是极其困难的，对于有些分布甚至是不可能的。所以我们使用一些采样方法，例如Gibbs sampling，Metropolis-Hasting算法。本文介绍Hamiltonian Monte-Carlo算法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python调用作为参数的函数的方法</title>
      <link>https://blog.xpgreat.com/p/function_parameter_dict/</link>
      <pubDate>Thu, 10 Jun 2021 11:00:00 +0200</pubDate>
      
      <guid>https://blog.xpgreat.com/p/function_parameter_dict/</guid>
      <description>&lt;p&gt;今天在做project的时候遇到一个需求，简单来说是给定一个未知的函数&lt;code&gt;func&lt;/code&gt;和他的参数范围，需要用这些参数重复调用该函数，记录返回值。此时遇到的问题是不知道&lt;code&gt;func&lt;/code&gt;有多少参数和传入参数的顺序，查阅文档后发现可以用参数字典给函数传参，现记录于此。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[论文解读]买方/卖方分析师对基金经理决策的影响</title>
      <link>https://blog.xpgreat.com/p/ssa_bsa/</link>
      <pubDate>Mon, 12 Apr 2021 17:48:40 +0200</pubDate>
      
      <guid>https://blog.xpgreat.com/p/ssa_bsa/</guid>
      <description>&lt;p&gt;在基金经理决策时，他所依赖的信息源主要是分析师，分析师分为三种：卖方分析师（Sell-side Analyst, SSA）、买方分析师（Buy-side Analyst, BSA）和独立第三方分析师（Independent Third-party Analyst, ITA）。基金经理如何权衡这三个来源的信息，决策时使用的权重有什么影响，分析师本身的一些特征（例如经验、偏差、准确度）会对决策结果带来什么影响？Yingmei Cheng et al. 在2006年发表的名为“
Buy-Side Analysts, Sell-Side Analysts, and Investment Decisions of Money Manager”的论文对此作了详细的理论和实证分析。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AMPlibraryagent异常访问Onedrive下载</title>
      <link>https://blog.xpgreat.com/p/amp_onedrive/</link>
      <pubDate>Sat, 10 Apr 2021 11:19:05 +0200</pubDate>
      
      <guid>https://blog.xpgreat.com/p/amp_onedrive/</guid>
      <description>&lt;p&gt;先放方法：用任务监视器定位到AMPlibraryagent的路径，然后使用OneDrive的“应用管理”，停止响应AMPlibraryagent的请求。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>搭建真分布式Hadoop集群指南</title>
      <link>https://blog.xpgreat.com/p/hadoop_aws/</link>
      <pubDate>Mon, 29 Mar 2021 10:39:10 +0200</pubDate>
      
      <guid>https://blog.xpgreat.com/p/hadoop_aws/</guid>
      <description>&lt;p&gt;搭建一个Hadoop环境是学习大数据技术的第一步，这个环境可以是单机的，也可以是伪集群的，但最贴近实际生产环境的还是真集群的版本。本文提供一个基于AWS搭建Hadoop的简要指南，基于AWS EC2 Ubuntu 20。如果你也用的是AWS的免费套餐，几个注意的地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;小心流量使用情况，免费的仅包括了15G，请设置使用提醒。&lt;/li&gt;
&lt;li&gt;选择机器配置的时候注意选择免费套餐内的，否则也会扣费。&lt;/li&gt;
&lt;li&gt;免费套餐包括EC2每个月750h/台的使用时间，开多台实例的话注意不要超时，可以随用随开，不用就关。&lt;/li&gt;
&lt;li&gt;关闭后再启动公有IP会变，注意配置问题。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>利用sklearn构建tfidf向量</title>
      <link>https://blog.xpgreat.com/p/tfidf_python/</link>
      <pubDate>Tue, 24 Nov 2020 11:22:02 +0800</pubDate>
      
      <guid>https://blog.xpgreat.com/p/tfidf_python/</guid>
      <description>在自然语言处理中，第一步需要面对的就是词向量特征的提取。语言的特征提取在sklearn模块中有相当完善的方法和模块，本文先利用CountVectorizer提取词汇，再用TfidfTransformer计算TFIDF向量。之所以选择CountVectorizer而不自行写一个代码，是因为在使用时维度很容易超过10w，产生的bag-of-words向量特别稀疏，需要耗费极大的内存，而sklearn实现了一个稀疏矩阵的存储形式，可以极大的加速和降低消耗。
构建Bag-of-words词汇矩阵 from sklearn.feature_extraction.text import CountVectorizer #测试用字符串list s_l = [&amp;#39;Relevant words for each class or cluster are identified by computing a relevancy score rc for every word ti based on the documents in the class&amp;#39;, &amp;#39;or cluster and then selecting the highest scoring&amp;#39;, &amp;#39;words. These scores can be computed either by-89&amp;#39;, &amp;#39;aggregating the raw tf-idf features of all documents&amp;#39;, &amp;#39;in the group (Section 2.3.1), by aggregating these&amp;#39;, &amp;#39;features weighted by some classifier’s parameters&amp;#39;, &amp;#39;(Section 2.</description>
    </item>
    
    <item>
      <title>论文解读：Exploring text datasets by visualizing relevant words</title>
      <link>https://blog.xpgreat.com/p/explore_text_dataset/</link>
      <pubDate>Thu, 19 Nov 2020 15:14:26 +0800</pubDate>
      
      <guid>https://blog.xpgreat.com/p/explore_text_dataset/</guid>
      <description>&lt;p&gt;在做机器学习使用新数据集时，我们首先要知道它的特点，一个可以快速可靠地深入了解所选文档的内容，并区分它们类别的工具十分重要。 在这篇论文，作者从文本集合中提取“相关词”，以概括属于某个类别（或在unlabeled数据集下为聚类的组）的文档的内容，并在词云中可视化它们。 作者比较了三种提取相关单词的方法，并使用两个数据集验证了模型的可用性。&lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/pdf/1707.05261.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;论文链接&lt;/a&gt;，&lt;a class=&#34;link&#34; href=&#34;https://github.com/cod3licious/textcatvis&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;论文代码&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hive窗口函数总结</title>
      <link>https://blog.xpgreat.com/p/hive_windowfunc/</link>
      <pubDate>Thu, 29 Oct 2020 11:01:26 +0800</pubDate>
      
      <guid>https://blog.xpgreat.com/p/hive_windowfunc/</guid>
      <description>&lt;p&gt;窗口函数是对Hive的一项增强，用来更方便地分析离线数据。窗口函数的使用场景非常之多，包括去重、排名、分组求和等等。本文希望尽可能全面的归纳窗口函数的用法，以便日后的查阅。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>机器学习的工作流程</title>
      <link>https://blog.xpgreat.com/p/workflow_ml/</link>
      <pubDate>Sun, 15 Mar 2020 16:25:12 +0800</pubDate>
      
      <guid>https://blog.xpgreat.com/p/workflow_ml/</guid>
      <description>&lt;p&gt;最近在阅读François Chollet写的Deep Learning with Python. 书中有很多经验性的技巧和归纳，其中4.5写的Machine Learning的工作流程归纳的很好，看完深有启发，摘录于此。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>安装TensorFlow时踩的一个小坑</title>
      <link>https://blog.xpgreat.com/p/tip_inst_tf/</link>
      <pubDate>Sun, 15 Mar 2020 15:22:49 +0800</pubDate>
      
      <guid>https://blog.xpgreat.com/p/tip_inst_tf/</guid>
      <description>&lt;p&gt;不记得之前安装的是什么版本，这次（2020/3）让&lt;code&gt;pip&lt;/code&gt;自动安装选择的是&lt;code&gt;2.1.0&lt;/code&gt;，但这个版本安装后使用&lt;code&gt;import tensorflow&lt;/code&gt;会报错，如下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在Jupyer Notebook里安装包</title>
      <link>https://blog.xpgreat.com/p/jupyter_install_package/</link>
      <pubDate>Mon, 09 Dec 2019 22:01:11 +0100</pubDate>
      
      <guid>https://blog.xpgreat.com/p/jupyter_install_package/</guid>
      <description>&lt;p&gt;一个方便的小技巧，可以很快的安装缺失的包。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>让程序在后台稳定运行的方法</title>
      <link>https://blog.xpgreat.com/p/keep_running_after-disconnect/</link>
      <pubDate>Tue, 16 Jul 2019 16:21:51 +0200</pubDate>
      
      <guid>https://blog.xpgreat.com/p/keep_running_after-disconnect/</guid>
      <description>&lt;p&gt;在使用SSH链接远程虚拟机的时候经常会出现网络连接不稳定而导致前台运行的代码终止运行的情况，怎样能让程序稳定地在后台运行，不受断线的影响？IBM Developer上的这篇文章很有帮助，转载方便以后查阅。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>投资对象的资本结构无关性</title>
      <link>https://blog.xpgreat.com/p/irrelevance_invest/</link>
      <pubDate>Sat, 08 Jun 2019 11:23:53 +0200</pubDate>
      
      <guid>https://blog.xpgreat.com/p/irrelevance_invest/</guid>
      <description>&lt;p&gt;本文介绍了公司的杠杆效应（Leverage Effect）和Modigliani-Miller定理，以阐述投资对象的资本结构与价值的无关性。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>中短期电价预测模型简介</title>
      <link>https://blog.xpgreat.com/p/epf_models/</link>
      <pubDate>Sat, 25 May 2019 17:35:01 +0200</pubDate>
      
      <guid>https://blog.xpgreat.com/p/epf_models/</guid>
      <description>&lt;p&gt;从1981年的智利电力体制改革之后，英美等国先后进行了电力工业重组，这些努力导致了电力工业的市场化，促成了电力市场的形成，实现了资源的合理分配和社会效益的最大化。准确的电力价格对发电商、用户、监管者具有重要的意义。本文将常用的电价预测（EPF, Electricity Price Forecasting）模型进行了分类，并加以简介。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>递归神经网络</title>
      <link>https://blog.xpgreat.com/p/rnn_lstm_gru/</link>
      <pubDate>Tue, 14 May 2019 10:48:15 +0200</pubDate>
      
      <guid>https://blog.xpgreat.com/p/rnn_lstm_gru/</guid>
      <description>&lt;p&gt;递归神经网络是神经网络的一种，与其他神经网络不同点在于，它可以很好地处理序列数据，即前面的数据的输入与后面的输出是有关系的，比如一句话的语义理解。本文介绍了递归神经网络及其两个变种——LSTM和GRU，目的是梳理一下自己所理解的RRN，也希望能够给初次接触RRN的同学一点帮助。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>英文论文写作句型</title>
      <link>https://blog.xpgreat.com/p/eng_thesis_voc/</link>
      <pubDate>Wed, 08 May 2019 22:13:27 +0200</pubDate>
      
      <guid>https://blog.xpgreat.com/p/eng_thesis_voc/</guid>
      <description>&lt;p&gt;最近终于开始写毕业论文了，要求用英语，从网上搜集了一下英语论文的句型，整理后发布到博客，方便查阅。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>机器学习中的矩阵求导</title>
      <link>https://blog.xpgreat.com/p/linalg_in_ml/</link>
      <pubDate>Thu, 17 Jan 2019 21:47:14 +0100</pubDate>
      
      <guid>https://blog.xpgreat.com/p/linalg_in_ml/</guid>
      <description>&lt;p&gt;在学习机器学习的算法时，推导过程中往往会涉及矩阵或向量求导以及一些其他的线性代数的知识。比如在推导LDA算法的时候，就是把Fisher&amp;rsquo;s Criterion求导后置零得到的结果。另外在优化的时候经常会使用到梯度下降法，这与矩阵向量求导也是分不开的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用MathJax时的注意事项</title>
      <link>https://blog.xpgreat.com/p/mathjax_tips/</link>
      <pubDate>Thu, 17 Jan 2019 17:28:35 +0100</pubDate>
      
      <guid>https://blog.xpgreat.com/p/mathjax_tips/</guid>
      <description>记录一些在使用MathJax写公式时踩过的坑，持续更新。本来放在另一篇里的，内容越来越多，单独成篇。
用$ $无法输入行内公式 MathJax默认禁用了这种方式，你可以使用\\( 你的公式 \\)的方法，也可以参考它的default.js自行配置（在295行）。行间公式默认可以用\\[ 你的公式 \\]或者传统的TeX写法$$ 你的公式 $$。
输入下标出错 x_{abc}这样使用的时候会莫名其妙的报错，试了一下把_转义：x\_{abc}，就能用了。
公式不能换行 因为md解析的时候把\\解析成了一个\，解决方法是用四根\\\\ 换行（最后要加一个半角空格）。（也是醉了）
公式对齐 直接上代码：
\begin{aligned} &amp;amp;\nabla_{\mathbf x}A\mathbf x = A \\\\ &amp;amp;\frac{\partial \mathbf x^T \mathbf a}{\partial \mathbf x} = \frac{\partial \mathbf a^T \mathbf x}{\partial \mathbf x} = \mathbf a \\\\ \end{aligned} 效果： $$ \begin{aligned} &amp;amp;\nabla_{\mathbf x}A\mathbf x = A \\ &amp;amp;\frac{\partial \mathbf x^T \mathbf a}{\partial \mathbf x} = \frac{\partial \mathbf a^T \mathbf x}{\partial \mathbf x} = \mathbf a \\ \end{aligned} $$</description>
    </item>
    
    <item>
      <title>认知算法小结</title>
      <link>https://blog.xpgreat.com/p/ca_short_summary/</link>
      <pubDate>Fri, 28 Dec 2018 20:57:51 +0100</pubDate>
      
      <guid>https://blog.xpgreat.com/p/ca_short_summary/</guid>
      <description>&lt;p&gt;在认知算法课里学习了一些算法，比如NCC，感知算法，LDA等等，小结一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>利率期权</title>
      <link>https://blog.xpgreat.com/p/intrest_option/</link>
      <pubDate>Tue, 25 Dec 2018 11:02:13 +0100</pubDate>
      
      <guid>https://blog.xpgreat.com/p/intrest_option/</guid>
      <description>&lt;p&gt;利率期权(interest-rate option)是一项关于利率变化的权利。买方支付一定金额的期权费后，就可以获得这项权利：在到期日按预先约定的利率，按一定的期限借入或贷出一定金额的货币。这样当市场利率向不利方向变化时，买方可固定其利率水平；当市场利率向有利方向变化时，买方可获得利率变化的好处。利率期权的卖方向买方收取期权费，同时承担相应的责任。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>期权的风险指标</title>
      <link>https://blog.xpgreat.com/p/finance_greeks/</link>
      <pubDate>Mon, 24 Dec 2018 17:06:00 +0100</pubDate>
      
      <guid>https://blog.xpgreat.com/p/finance_greeks/</guid>
      <description>&lt;p&gt;期权的风险指标通常用希腊字母来表示，包括：Delta值(\(\Delta\))、Gamma值(\(\Gamma\))、Omega值(\(\Omega\))、Theta值(\(\theta\))、Vega值、Rho(\(\rho\))值等。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux下压缩命令</title>
      <link>https://blog.xpgreat.com/p/linux_compress/</link>
      <pubDate>Sun, 16 Dec 2018 13:30:23 +0100</pubDate>
      
      <guid>https://blog.xpgreat.com/p/linux_compress/</guid>
      <description>Linux下压缩解压缩命令的归纳。
.tar 解包：tar xvf FileName.tar
打包：tar cvf FileName.tar DirName
（注：tar是打包，不是压缩！）
.gz 解压1：gunzip FileName.gz
解压2：gzip -d FileName.gz
压缩：gzip FileName
.tar.gz 和 .tgz 解压：tar zxvf FileName.tar.gz
压缩：tar zcvf FileName.tar.gz DirName
.bz2 解压1：bzip2 -d FileName.bz2
解压2：bunzip2 FileName.bz2
压缩：bzip2 -z FileName
.tar.bz2 解压：tar jxvf FileName.tar.bz2
压缩：tar jcvf FileName.tar.bz2 DirName
.bz 解压1：bzip2 -d FileName.bz
解压2：bunzip2 FileName.bz
压缩：未知
.tar.bz 解压：tar jxvf FileName.tar.bz
压缩：未知
.Z 解压：uncompress FileName.Z
压缩：compress FileName
.tar.Z 解压：tar Zxvf FileName.tar.Z
压缩：tar Zcvf FileName.tar.Z DirName</description>
    </item>
    
    <item>
      <title>布莱克-舒尔斯期权定价模型</title>
      <link>https://blog.xpgreat.com/p/bs_model/</link>
      <pubDate>Tue, 11 Dec 2018 22:05:54 +0100</pubDate>
      
      <guid>https://blog.xpgreat.com/p/bs_model/</guid>
      <description>&lt;p&gt;在Risikomanagement课上讲到了布莱克-舒尔斯期权定价模型（Black-Scholes Option Pricing Model），但只是给出了公式，没有推导。在网上查找之后终于大致弄懂，把推导过程尽可能的详细的写一写。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>售出-购进平价理论</title>
      <link>https://blog.xpgreat.com/p/put_call_parity/</link>
      <pubDate>Fri, 07 Dec 2018 21:48:39 +0100</pubDate>
      
      <guid>https://blog.xpgreat.com/p/put_call_parity/</guid>
      <description>&lt;p&gt;售出-购进平价理论（Put-Call Parity）指在无套利原则下（Non-Arbitrage），欧式看涨期权（Call Option）和欧式看跌期权（Put Option）定价之间存在的基本关系。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在Hugo博客中加入代码高亮</title>
      <link>https://blog.xpgreat.com/p/hugo_add_highlight/</link>
      <pubDate>Wed, 05 Dec 2018 19:31:24 +0100</pubDate>
      
      <guid>https://blog.xpgreat.com/p/hugo_add_highlight/</guid>
      <description>&lt;p&gt;相信自己搭建博客的人中有一大半都是玩代码的，所以代码高亮可以说是博客的必备功能。本文提供一个在基于Hugo的博客上使用&lt;code&gt;highlight.js&lt;/code&gt;的代码高亮方案。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Markdown里图片并列显示</title>
      <link>https://blog.xpgreat.com/p/md_display_img_parallel/</link>
      <pubDate>Wed, 05 Dec 2018 17:42:53 +0100</pubDate>
      
      <guid>https://blog.xpgreat.com/p/md_display_img_parallel/</guid>
      <description>&lt;p&gt;在编辑博文的时候，有时会想把两张图片并列在一起显示，参考了网上内容，分享一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo和WordPress比较</title>
      <link>https://blog.xpgreat.com/p/hugo_wp/</link>
      <pubDate>Wed, 05 Dec 2018 17:38:52 +0100</pubDate>
      
      <guid>https://blog.xpgreat.com/p/hugo_wp/</guid>
      <description>对比以前搭建WordPress博客的经历，Hugo有这样的一些不同：
  Hugo生成的是静态页面，所以没有内置的评论、搜索、登陆等等一系列的需要后台的功能。
  没有WordPress上那么多五花八门的插件。
  主题偏少，但足够。
  使用起来有些门槛，比如必须会markdown，最好有一点HTML、 CSS的知识。但比起WordPress，学习起来快很多。
  备份起来比WordPress简单（？），WordPress得用插件。
  管理简单，因为只有基本的功能。
  所以如果要搭建个人博客，Hugo十分足够。如果是喜欢图形化的编辑，喜欢尝试各种各样的主题插件（喜新厌旧），需要能方便的互动的，推荐WordPress。如果搭建组织网站，比如社团网站，需要多人、多层管理维护的，上WordPress，不用考虑Hugo了。</description>
    </item>
    
    <item>
      <title>使用Hugo的一些注意事项</title>
      <link>https://blog.xpgreat.com/p/tips_hugo/</link>
      <pubDate>Wed, 05 Dec 2018 16:32:54 +0100</pubDate>
      
      <guid>https://blog.xpgreat.com/p/tips_hugo/</guid>
      <description>&lt;p&gt;一些在使用Hugo时发现的小技巧或问题及解决方法，会持续更新。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>博客第一步</title>
      <link>https://blog.xpgreat.com/p/blog_building/</link>
      <pubDate>Mon, 03 Dec 2018 19:58:50 +0100</pubDate>
      
      <guid>https://blog.xpgreat.com/p/blog_building/</guid>
      <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo&lt;/a&gt;是一个用Go编写的静态站点生成器，由于具有丰富的主题资源和惊人的生成速度而备受青睐。博文采用&lt;code&gt;Markdown&lt;/code&gt;这一轻量的标记语言编写，速度快，美观。本博客即是基于Hugo搭建，下面讲述一下我的建站历程。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
