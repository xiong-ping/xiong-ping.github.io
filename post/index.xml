<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on XP&#39;s Blog</title>
    <link>https://xpingbug.github.io/post/</link>
    <description>Recent content in Posts on XP&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 05 Dec 2018 19:31:24 +0100</lastBuildDate>
    
	<atom:link href="https://xpingbug.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在Hugo博客中加入代码高亮</title>
      <link>https://xpingbug.github.io/post/hugo_add_highlight/</link>
      <pubDate>Wed, 05 Dec 2018 19:31:24 +0100</pubDate>
      
      <guid>https://xpingbug.github.io/post/hugo_add_highlight/</guid>
      <description>相信自己搭建博客的人中有一大半都是玩代码的，所以代码高亮可以说是博客的必备功能。本文提供一个在基于Hugo的博客上使用highligh.js的代码高亮方案。
实施步骤  在highligh.js的官方网站上复制HTML的link和script标签。例如：  &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/styles/default.min.css&amp;quot;&amp;gt; &amp;lt;script src=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/highlight.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;   打开themes/yourtheme/layouts/_default目录，打开baseof.html，（可能对不同主题文件和路径会有不同，如果找不到可以试试查找head.html或header.html。这个html文件是网页的head部分的模板。在合适的地方粘贴第一步中的代码。
 大功告成。
  使用 用&amp;#96;&amp;#96;&amp;#96;包裹代码块，保险起见，在&amp;#96;&amp;#96;&amp;#96;后加上语言名字。例如（不包括方括号内）：
[START HERE] ```c int hash(char * str, int length) { // hash function int hash = 0; for (int i = 0; i &amp;lt; length; i++) { hash = ((hash + str[i]) * 31) % MAX_ID; // maximum of ID? } return hash; } ```[END HERE]  显示效果如下：
int hash(char * str, int length) { // hash function int hash = 0; for (int i = 0; i &amp;lt; length; i++) { hash = ((hash + str[i]) * 31) % MAX_ID; // maximum of ID?</description>
    </item>
    
    <item>
      <title>Markdown里图片并列显示</title>
      <link>https://xpingbug.github.io/post/md_display_img_parallel/</link>
      <pubDate>Wed, 05 Dec 2018 17:42:53 +0100</pubDate>
      
      <guid>https://xpingbug.github.io/post/md_display_img_parallel/</guid>
      <description> 在编辑博文的时候，有时会想把两张图片并列在一起显示，参考了网上内容，分享一下。
首先记住一点，在markdown里是可以直接写html代码的。这个前提下很自然的有下面的方法：
调整图片宽度/高度： &amp;lt;img src=&amp;quot;http://xxx.jpg&amp;quot; title=&amp;quot;xxx&amp;quot; width=&amp;quot;100&amp;quot; height=&amp;quot;100&amp;quot;/&amp;gt;  宽度是 width，高度是 height，title 为图片描述。
单张居中显示： &amp;lt;center&amp;gt; &amp;lt;img src=&amp;quot;http://example.com/xxx.png&amp;quot;&amp;gt; &amp;lt;/center&amp;gt;  或者：
&amp;lt;figure&amp;gt; &amp;lt;img src=&amp;quot;http://xxx.jpg&amp;quot;&amp;gt; &amp;lt;/figure&amp;gt;  两张并排显示： &amp;lt;figure class=&amp;quot;half&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;http://xxx.jpg&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;http://xxx.jpg&amp;quot;&amp;gt; &amp;lt;/figure&amp;gt;  三张并排显示： &amp;lt;figure class=&amp;quot;third&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;http://xxx.jpg&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;http://xxx.jpg&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;http://xxx.jpg&amp;quot;&amp;gt; &amp;lt;/figure&amp;gt;  </description>
    </item>
    
    <item>
      <title>Hugo和WordPress比较</title>
      <link>https://xpingbug.github.io/post/hugo_wp/</link>
      <pubDate>Wed, 05 Dec 2018 17:38:52 +0100</pubDate>
      
      <guid>https://xpingbug.github.io/post/hugo_wp/</guid>
      <description>对比以前搭建WordPress博客的经历，Hugo有这样的一些不同：
 Hugo生成的是静态页面，所以没有内置的评论、搜索、登陆等等一系列的需要后台的功能。
 没有WordPress上那么多五花八门的插件。
 虽然支持MathJax，但数学公式的编辑上还是有些力不从心。
 主题偏少，但足够。
 使用起来有些门槛，比如必须会markdown，最好有一点HTML、 CSS的知识。但比起WordPress，学习起来快很多。
 备份起来比WordPress简单（？），WordPress得用插件。
 管理简单，因为只有基本的功能。
  所以如果要搭建个人博客，Hugo十分足够。如果是喜欢图形化的编辑，喜欢尝试各种各样的主题插件（喜新厌旧），需要能方便的互动的，推荐WordPress。如果搭建组织网站，比如社团网站，需要多人、多层管理维护的，上WordPress，不用考虑Hugo了。</description>
    </item>
    
    <item>
      <title>使用Hugo的一些注意事项</title>
      <link>https://xpingbug.github.io/post/tips_hugo/</link>
      <pubDate>Wed, 05 Dec 2018 16:32:54 +0100</pubDate>
      
      <guid>https://xpingbug.github.io/post/tips_hugo/</guid>
      <description>如何插入本地图片？ 一直不知道怎样插入本地图片，查找后得知，在site目录下的static目录就是存放静态文件的地方，可以在下面创建一个media目录，用于保存图片等媒体文件，引用的话，使用/media/123.png即可。
注意：不要使用大写的后缀名，如123.PNG，生成的静态页面引用的是小写后缀，会出现找不到文件。
搜索引擎无法搜索到博客内容。 这是因为搜索引擎还没有收录我们的URL，可以在搜索引擎提交一下自己的网址，比如谷歌，并过一段时间再试。
Hugo不支持站内搜索和内置评论。 这是因为Hugo生成的是静态网站，没有服务器后台，没有数据库，所以当然不能搜索和评论啦。如果你的网站被搜索引擎收录了，可以使用搜索引擎的限制搜索，比如serchword site:https://yoursite.com/，有的主题提供搜索框工具，基本也是靠这种方法。评论可以使用外置的评论系统，比如Discus。
Git push的时候会发生冲突。 可能是在GitHub上配置自定义页面的时候（我就是在这时遇到的），repository里创建了新的文件（我碰到的是CNAME文件）而本地没有。解决方法是先pull再push。
Hugo报错。 肯定是在配置文件或者是文章头部配置有问题，具体查看报错信息进行修改即可，Hugo的报错做的不错，很好理解。
访问的时候浏览器提示“不安全”。 这是因为没有启用HTTPS，如果是托管在GitHub上的话可以使用GitHub提供的HTTPS福利。开启步骤如下：
 找到处于不可选状态的Enforce HTTPS选项，旁边会提示 Unavailable for your site because your domain is not properly configured to support HTTPS 。 将填在Custom domain里的自定义域名清空，保存，然后重新填上自定义域名，再保存。 现在可以勾选Enforce HTTPS选项了，这时会提示正在签发证书: Not yet available for your site because the certificate has not finished being issued 。 证书签发成功后，可以使用 https 链接访问自定义域名了。  DNS配置完成后，还不能访问页面，或者有的设备可以访问，而有的不行。 这是因为DNS需要一定时间传播，等待一段时间就好了。有兴趣可以阅读一下DNS的维基百科。</description>
    </item>
    
    <item>
      <title>博客第一步</title>
      <link>https://xpingbug.github.io/post/blog_building/</link>
      <pubDate>Mon, 03 Dec 2018 19:58:50 +0100</pubDate>
      
      <guid>https://xpingbug.github.io/post/blog_building/</guid>
      <description>Hugo是一个用Go编写的静态站点生成器，由于具有丰富的主题资源和惊人的生成速度而备受青睐。博文采用Markdown这一轻量的标记语言编写，速度快，美观。本博客即是基于Hugo搭建，下面讲述一下我的建站历程。
安装Hugo 如果你是macOS用户，请使用Homebrew快速安装
brew install hugo  如果你是Windows用户，请使用Chocolatey或者Scoop快速安装，取决于你使用什么包管理
choco install hugo -confirm scoop install hugo  如果你是Debian或Ubuntu用户，请使用apt快速安装
sudo apt-get install hugo  基本上使用单行命令都可以成功安装Hugo，具体请移步这里。
生成第一篇文章 使用如下命令新建一个名为“mysite”的网站：
hugo new site mysite  接下来，在这里找到一个漂亮的网站主题。主题极其之多，找到一个满意的并不难。本博客采用的是Mainroad主题。如果对主题的配色之类的不满意，可以通过修改style.css这一文件来达到想要的效果。
以Mainroad为例，将主题clone到本地的themes文件夹内：
cd themes git clone https://github.com/Vimux/Mainroad.git  mysite/content是用来存放文档的地方，我们在其下建立一个新的Markdown文件：
hugo new post/first.md  在first.md中写入一些内容，使用如下命令进行本地预览：
hugo server -t casper -D  打开网址 http://localhost:1313/ 即可查看本地生成的静态网站。
适配主题 Hugo的每个主题都会有不同的参数配置，而这些配置被存放在根目录下的config.toml文件中，以Mainroad为例，官方的GitHub里已经做了说明：
baseurl = &amp;quot;/&amp;quot; title = &amp;quot;Mainroad&amp;quot; languageCode = &amp;quot;en-us&amp;quot; paginate = &amp;quot;10&amp;quot; # Number of posts per page theme = &amp;quot;mainroad&amp;quot; disqusShortname = &amp;quot;&amp;quot; # Enable comments by entering your Disqus shortname googleAnalytics = &amp;quot;&amp;quot; # Enable Google Analytics by entering your tracking id [Author] # Used in authorbox name = &amp;quot;John Doe&amp;quot; bio = &amp;quot;John Doe&#39;s true identity is unknown.</description>
    </item>
    
    <item>
      <title>关于</title>
      <link>https://xpingbug.github.io/post/about/</link>
      <pubDate>Mon, 03 Dec 2018 19:40:38 +0100</pubDate>
      
      <guid>https://xpingbug.github.io/post/about/</guid>
      <description>会写一些学习记录、生活感悟之类的随笔。
联系方式在右边Social。
博主在德国某大学经济工程（信息技术方向）在读，留德华一名。</description>
    </item>
    
  </channel>
</rss>